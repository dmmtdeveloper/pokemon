---
import type { GetStaticPaths } from "astro";
import Layout from "@layouts/Layout.astro";
import "@styles/global.css";
import type { PokemonListResponse } from "@interfaces/pokemon-list.response";
import PokemonCard from "@components/pokemons/PokemonCard.astro";
import Title from "@components/shared/Title.astro";

export const getStaticPaths = (async ({ paginate }) => {
  const resp = await fetch("https://pokeapi.co/api/v2/pokemon?limit=151");
  const { results } = (await resp.json()) as PokemonListResponse;

  return paginate(results, { pageSize: 15 });
}) satisfies GetStaticPaths;

const title = "Pokémon static site";
const { page } = Astro.props;
---

<Layout title={title}>
  <Title title="listado paginado" />

  <section
    aria-label="Listado de pokémons"
    class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-2"
  >
    {page.data.map(({ name, url }) => <PokemonCard name={name} url={url} />)}
  </section>

  <section class="flex mt-10 gap-2 items-center justify-between">
    <div class="gap-2 flex">
      <a
        class:list={[
          "btn",
          {
            disabled: !page.url.prev,
          },
        ]}
        class="btn"
        href={page.url.prev}
      >
        Anteriores
      </a>

      <a
        class:list={[
          "btn",
          {
            disabled: !page.url.next,
          },
        ]}
        class="btn"
        href={page.url.next}>Siguientes</a
      >
    </div>

    <span class="text-xl">Página {page.currentPage}</span>
  </section>
</Layout>

<style>
  .btn {
    padding: 0.5rem 1rem;
    background-color: rgb(52, 52, 226);
    border-radius: 5px;
    color: white;
    text-decoration: none;
    transition: background-color 0.3s;
  }
  
  .btn:hover{
    background-color: rgb(82, 82, 226);

  }

  .disabled {
    background-color: rgb(58, 63, 70);
    cursor: not-allowed;
    color: gray;
  }
  
  .disabled:hover{
    background-color: rgb(58, 63, 70);

  }
</style>
